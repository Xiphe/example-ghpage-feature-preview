name: deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: "2.x"

      - uses: actions/cache@v2
        id: bundle-v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - uses: actions/cache@v2
        id: npm-v1
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: bundle install
        if: steps.bundle-v1.outputs.cache-hit != 'true'
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: npm install
        if: steps.npm-v1.outputs.cache-hit != 'true'
        run: |
          npm ci

      - name: jekyll build
        run: |
          BRANCH=${GITHUB_HEAD_REF##*/}
          PROD_URL=/example-ghpage-feature-preview
          BASE_URL=$([ "$BRANCH" == "main" ] && echo $PROD_URL || echo "$PROD_URL/preview/$BRANCH")
          bundle config path vendor/bundle
          bundle exec jekyll build --baseurl $BASE_URL
          touch _site/.nojekyll

      - name: deploy gh-pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          BRANCH=${GITHUB_HEAD_REF##*/}
          DEST=$([ "$BRANCH" == "main" ] && echo "." || echo "preview/$BRANCH")
          git remote set-url origin https://git:${GITHUB_TOKEN}@github.com/Xiphe/example-ghpage-feature-preview.git
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
          npx gh-pages-clean
          npx --no-install gh-pages\
              --branch gh-pages\
              --dist _site\
              --dest $DEST\
              --before-add ./_beforeAdd.js\
              --add\
              --dotfiles

      - name: decorate PR
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ "$GITHUB_EVENT_NAME" == "pull_request" ]; then
            npx decorate-gh-pr -r -c "<a href=\"https://xiphe.net/example-ghpage-feature-preview/preview/${GITHUB_HEAD_REF##*/}\"><img src=\"https://img.shields.io/badge/published-gh--pages-green\" alt=\"published to gh-pages\" /></a><hr />"
          fi
